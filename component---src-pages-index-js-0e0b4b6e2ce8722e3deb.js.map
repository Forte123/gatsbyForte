{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/forte.png","webpack:///./src/components/layout2.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout2__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","IndexPage","_ref","data","a","createElement","title","keywords","className","allWordpressAcfOptions","edges","map","_ref2","index","node","options","home_heading","home_subheading","_ref3","clients_count","clients_heading","about_heading","about_subheading","about_content","src","about_image","source_url","alt","allWordpressPage","_ref4","to","slug","m","module","exports","require","default","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","p","_images_forte_png__WEBPACK_IMPORTED_MODULE_2__","_images_forte_png__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","Layout2","style","margin","maxWidth","padding","marginBottom","image","listStyle","float","display","marginRight","color","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf"],"mappings":"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","file":"component---src-pages-index-js-0e0b4b6e2ce8722e3deb.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\";\nimport {Link} from \"gatsby\";\nimport Layout from \"../components/layout2\"\nimport SEO from \"../components/seo\"\n\nconst IndexPage = ({data}) => (\n  <Layout>\n    <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n    <div className=\"home-page-data\">\n      {data.allWordpressAcfOptions.edges.map(({ node }, index) => (\n        <div className=\"home-containder\">\n          <h1>{node.options.home_heading}</h1>\n          <p>{node.options.home_subheading}</p>\n          <ul>\n          {data.allWordpressAcfOptions.edges.map(({ node }, index) => (\n            <li>{node.clients_count} {node.clients_heading}</li>\n          ))}\n          </ul>\n          <div className=\"about-section\">\n          <h1>{node.options.about_heading}</h1>\n          <span>{node.options.about_subheading}</span>\n          <p>{node.options.about_content}</p>\n          <img src={node.options.about_image.source_url} alt=\"About\"/>\n          </div>\n        </div>\n        ))}\n    </div>\n      <h2>Pages</h2>\n      {data.allWordpressPage.edges.map(({ node }, index) => (\n        <p><Link to={\"/getsby/\"+node.slug}>{node.title}</Link></p>\n      ))}\n  </Layout>\n)\n\nexport default IndexPage\nexport const query = graphql`\nquery {\n  allWordpressAcfOptions {\n    edges {\n      node{\n        options{\n          home_heading\n          home_subheading\n          about_heading\n          about_subheading\n          about_content\n          about_image {\n            source_url\n          }\n        }\n      }\n    }\n  }\n  allWordpressPage {\n    edges {\n      node {\n        id\n        title\n        content\n        excerpt\n        date\n        modified\n        slug\n        status\n      }\n    }\n  }\n}\n`\n// export const query = graphql`\n// query {\n//     allWordpressPage {\n//         edges {\n//           node {\n//             id\n//             title\n//             content\n//             excerpt\n//             date\n//             modified\n//             slug\n//             status\n//           }\n//         }\n//       }\n//   }\n// `","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/forte-1d587b8322d00db88b9076b7ccac0afb.png\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport image from '../images/forte.png'\r\nimport { Link } from \"gatsby\";\r\nimport \"./layout2.css\";\r\n//import Menu from \"./menu.js\";\r\n// import { graphql } from \"gatsby\";\r\n\r\nconst Layout2 = ({children, data}) => (\r\n    <div style={{\r\n        margin: `0 auto`,\r\n        maxWidth: 1170,\r\n        padding: `0 1rem`,\r\n    }}>\r\n        <header style={{marginBottom: `1.5rem`}}>\r\n        <Link to='/'> <img src={image} alt=\"Logo\" /></Link>\r\n        {/* <Menu /> */}\r\n            <ul style={{\r\n                listStyle: `none`,\r\n                float: `right`,\r\n            }}>\r\n                <li style={{ display: `inline-block`, marginRight: `1rem`, }}><Link to='/'>Home</Link> </li>\r\n                <li style={{ display: `inline-block`, marginRight: `1rem`, }}><Link to='/blog'>Blog</Link> </li>\r\n                <li style={{ display: `inline-block`, marginRight: `1rem`, }}><Link to='/page-2'>Page 2</Link> </li>\r\n                <li style={{ display: `inline-block`, marginRight: `1rem`, }}><Link to='/page-3'>Page 3</Link> </li>\r\n                <li style={{ display: `inline-block`, marginRight: `1rem`, }}><Link to='/my-files'>Site Files</Link> </li>\r\n                <li style={{ display: `inline-block`, marginRight: `1rem`, }}><Link to='/info/about'>About</Link> </li>\r\n            </ul>\r\n            {/* {data.allWordpressPage.edges.map(({ node }, index) => (\r\n                <tr key={index}>\r\n                    <td>{node.title}</td>\r\n                    <td>{node.slug}</td>\r\n                </tr>\r\n            ))} */}\r\n            <h3 style={{color:`orange`}}>Forte Site</h3>\r\n        </header>\r\n        {children}\r\n    </div>\r\n)\r\n\r\nLayout2.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout2;\r\n\r\n// export const query = graphql`\r\n// query {\r\n//     allWordpressPage {\r\n//         edges {\r\n//           node {\r\n//             id\r\n//             title\r\n//             content\r\n//             excerpt\r\n//             date\r\n//             modified\r\n//             slug\r\n//             status\r\n//           }\r\n//         }\r\n//       }\r\n//   }\r\n// `","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}